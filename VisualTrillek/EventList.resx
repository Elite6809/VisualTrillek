<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEACABoBQAAJgAAABAQAAABACAAaAQAAI4FAAAoAAAAEAAAACAAAAABAAgAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAADMzMwAzMzQAMzQ1ADQ1NwA0NTkANTc8ADU4PwA2OUEANzpFADg9
        SgA5Pk4AOkBRADtCVgA7Q1gAPENZADxFXQA9R2AAPkhjAD5IZQBmZmYAZmhtAGlpaQBqa28AZmlyAGVq
        dwBlankAZWyBAGlxhgCx3f8A0ev/AP///wAAAAAAACwvAABLUAAAaHAAAIaQAAClsAAAw88AAOHwABHv
        /wAx8f8AUfP/AHH1/wCR9/8Asfn/ANH7/wD///8AAAAAAAAvIQAAUDcAAHBMAACQYwAAsHkAAM+PAADw
        pgAR/7QAMf++AFH/yABx/9MAkf/cALH/5QDR//AA////AAAAAAAALw4AAFAYAABwIgAAkCwAALA2AADP
        QAAA8EoAEf9bADH/cQBR/4cAcf+dAJH/sgCx/8kA0f/fAP///wAAAAAAAi8AAARQAAAGcAAACJAAAAqw
        AAALzwAADvAAACD/EgA9/zEAW/9RAHn/cQCY/5EAtf+xANT/0QD///8AAAAAABQvAAAiUAAAMHAAAD2Q
        AABMsAAAWc8AAGfwAAB4/xEAiv8xAJz/UQCu/3EAwP+RANL/sQDk/9EA////AAAAAAAmLwAAQFAAAFpw
        AAB0kAAAjrAAAKnPAADC8AAA0f8RANj/MQDe/1EA4/9xAOn/kQDv/7EA9v/RAP///wAAAAAALyYAAFBB
        AABwWwAAkHQAALCOAADPqQAA8MMAAP/SEQD/2DEA/91RAP/kcQD/6pEA//CxAP/20QD///8AAAAAAC8U
        AABQIgAAcDAAAJA+AACwTQAAz1sAAPBpAAD/eREA/4oxAP+dUQD/r3EA/8GRAP/SsQD/5dEA////AAAA
        AAAvAwAAUAQAAHAGAACQCQAAsAoAAM8MAADwDgAA/yASAP8+MQD/XFEA/3pxAP+XkQD/trEA/9TRAP//
        /wAAAAAALwAOAFAAFwBwACEAkAArALAANgDPAEAA8ABJAP8RWgD/MXAA/1GGAP9xnAD/kbIA/7HIAP/R
        3wD///8AAAAAAC8AIABQADYAcABMAJAAYgCwAHgAzwCOAPAApAD/EbMA/zG+AP9RxwD/cdEA/5HcAP+x
        5QD/0fAA////AAAAAAAsAC8ASwBQAGkAcACHAJAApQCwAMQAzwDhAPAA8BH/APIx/wD0Uf8A9nH/APeR
        /wD5sf8A+9H/AP///wAAAAAAGwAvAC0AUAA/AHAAUgCQAGMAsAB2AM8AiADwAJkR/wCmMf8AtFH/AMJx
        /wDPkf8A3LH/AOvR/wD///8AAAAAAAgALwAOAFAAFQBwABsAkAAhALAAJgDPACwA8AA+Ef8AWDH/AHFR
        /wCMcf8AppH/AL+x/wDa0f8A////AAAWGBwbFRYbGxoUFBQUFAAWAQ8TEgMCDBMTBAEBAQEWFAYTEwwB
        AQgTEwkBAQECFBQKExMIAQEBERMPAQEBARQUERMRAQEBAgwTEwUBAQEUFRMTDAEBAQEGExMLAQEBFBoT
        EwYBAQECARETEQEBAhQbExEBAQEBAQEKExMIAQEUGxMLAQEBAQEBBhMTDAECFBsTBgEBAQEBAQEPExMD
        ARQbEAEBAQEBAQIBChMTCQEUGwoDAQEBAQEBAQMTEw8DFBsFAQEBAQEBAQECDhMTBBQaAQIBAQEBAQEB
        AQgTEwoUFwEBAQEBAQEBAQEDEhMQFgAWFBQUFBQUFBQUFBkbHACAAQAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAQAAKAAAABAAAAAgAAAAAQAgAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAADMzM0AzMzO8ODxIxD5IY8s+SGPLNjlAwjMzM789Rl/KPkhjyzpB
        VMczMzO/MzMzvzMzM78zMzO/MzMzvTMzM0MzMzO6MzMz/zxDWf8/SWb/Pkhj/zMzNP8zMzP/OkBS/z9J
        Zv8+SGP/MzQ1/zMzM/8zMzP/MzMz/zMzM/8zMzO8MzMzvzQ1Of8+SWX/P0lm/zpAUv8zMzP/MzMz/zY4
        P/8/SWb/P0lm/zc7Rv8zMzP/MzMz/zMzM/8zMzP/MzMzvzMzM784PUv/P0lm/z9JZv82OUD/MzMz/zMz
        M/8zMzP/PUdg/z9JZv87Q1j/MzMz/zMzM/8zMzP/MzMz/zMzM78zMzO/PEVd/z9JZv89R2D/MzMz/zMz
        M/8zMzP/MzMz/zk/Tv8/SWb/Pkll/zQ1Of8zMzP/MzMz/zMzM/8zMzO/NjlAwj9JZv8/SWb/OT9P/zMz
        M/8zMzP/MzMz/zMzM/81Nzz/P0lm/z9JZv84PUv/MzMz/zMzM/8zMzP/MzMzvztDV8g/SWb/P0lm/zU3
        Pf8zMzP/MzMz/zMzM/8zMzP/MzMz/zxFXf8/SWb/PUZf/zMzM/8zMzP/MzMz/zMzM78+SGPLP0lm/z1G
        X/8zMzP/MzMz/zMzM/8zMzP/MzMz/zMzM/84PUv/P0lm/z9JZv81OD//MzMz/zMzM/8zMzO/Pkhjyz9J
        Zv85Pk3/MzMz/zMzM/8zMzP/MzMz/zMzM/8zMzP/NDU5/z5JZf8/SWb/OkBR/zMzM/8zMzP/MzMzvz5I
        Y8s/SWb/NDY7/zMzM/8zMzP/MzMz/zMzM/8zMzP/MzMz/zMzM/88Q1n/P0lm/z5IY/8zMzT/MzMz/zMz
        M78+SGPLPEVc/zMzM/8zMzP/MzMz/zMzM/8zMzP/MzMz/zMzM/8zMzP/NztH/z9JZv8/SWb/NzpE/zMz
        M/8zMzO/Pkhjyzg9S/8zMzP/MzMz/zMzM/8zMzP/MzMz/zMzM/8zMzP/MzMz/zM0Nv8+SGT/P0lm/ztC
        V/8zMzP/MzMzvz5IY8s0NTn/MzMz/zMzM/8zMzP/MzMz/zMzM/8zMzP/MzMz/zMzM/8zMzP/O0JV/z9J
        Zv8+SWX/NDU3/zMzM786QVTHMzMz/zMzM/8zMzP/MzMz/zMzM/8zMzP/MzMz/zMzM/8zMzP/MzMz/zY6
        Q/8/SWb/P0lm/zg9Sv8zMzO/NTc9vDMzM/8zMzP/MzMz/zMzM/8zMzP/MzMz/zMzM/8zMzP/MzMz/zMz
        M/8zMzT/Pkhj/z9JZv88RV3/MzMzuzMzMzszMzO4MzMzvzMzM78zMzO/MzMzvzMzM78zMzO/MzMzvzMz
        M78zMzO/MzMzvzpBUsc+SGPLPkhjxTU4P0EAAKxBAACsQQAArEEAAKxBAACsQQAArEEAAKxBAACsQQAA
        rEEAAKxBAACsQQAArEEAAKxBAACsQQAArEEAAKxB
</value>
  </data>
</root>